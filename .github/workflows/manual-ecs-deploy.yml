name: Manual ECS Deploy (Verify)

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag (e.g., 0.3.0-alpha-1.9.0-build.302-amd64)'
        required: true
      record_id:
        description: 'Teable record ID to update (optional)'
        required: false

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    outputs:
      start_time: ${{ steps.start_time.outputs.start }}
      image_tag: ${{ inputs.image_tag }}
    
    steps:
      - name: Record start time
        id: start_time
        run: echo "start=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Download current task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition teable \
            --query taskDefinition > task-definition-raw.json

      - name: Clean task definition for registration
        run: |
          # Remove system-managed fields that cannot be used for new task definition registration
          jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .placementConstraints, .compatibilities, .registeredAt, .registeredBy, .enableFaultInjection, .faultInjectionPolicy)' \
            task-definition-raw.json > task-definition.json

      - name: Render task definition with new image
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: teable
          image: 649941507946.dkr.ecr.us-west-2.amazonaws.com/teable/teable-cloud:${{ inputs.image_tag }}

      - name: Deploy to ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: teable-service-1
          cluster: teable
          wait-for-service-stability: true

      - name: Update Teable record to Launched
        if: inputs.record_id != '' && inputs.record_id != null
        run: |
          response=$(curl -s -X PATCH 'https://app.teable.ai/api/table/tblAhVLOxNtvkaF1ii5/record/${{ inputs.record_id }}' \
            -H 'Authorization: Bearer ${{ secrets.TEABLE_API_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{
              "fieldKeyType": "dbFieldName",
              "record": {
                "fields": {
                  "status": "Launched"
                }
              }
            }')
          
          echo "Response: $response"
          echo "Updated record ${{ inputs.record_id }} to Launched status"
